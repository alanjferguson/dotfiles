#!/usr/bin/env bash

# Define ANSI colour codes
GREEN='\033[0;32m'
CYAN='\033[0;36m'
YELLOW='\033[1;33m'
BOLD='\033[1m'
NC='\033[0m'  # No Colour

# Function to print a banner message
print_banner() {
    local message="$1"
    local border=$(printf '%*s' "${#message}" '' | tr ' ' '=')
    echo -e "\n${CYAN}${border}${NC}"
    echo -e "${YELLOW}${message}${NC}"
    echo -e "${CYAN}${border}${NC}\n"
}

# What directories should be installable by all users including the root user
base=(
  zsh
  nvim
  bin
)

# Folders that should, or only need to be installed for a local user
useronly=(
  git
  wezterm
  ssh
)

# Run the stow command for the passed in directory ($2) in location $1
stowit() {
  usr=$1
  app=$2
  echo -e "${BOLD}${YELLOW}Stowing ${app}${NC}"
  # -v verbose
  # --adopt so we can pull in existing changes
  # --dotfiles convert dot-foo to .foo
  # -R recursive
  # -t target
  stow -v --adopt --dotfiles -R -t "${usr}" "${app}"
  echo ""
}

# Run the unstow command for the passed in directory ($2) in location $1
unstowit() {
  usr=$1
  app=$2
  echo -e "${BOLD}${YELLOW}Unstowing ${app}${NC}"
  # -v verbose
  # --dotfiles convert dot-foo to .foo
  # -D delete
  # -t target
  stow -v --dotfiles -D -t "${usr}" "${app}"
  echo ""
}

# Process all apps in the given array with the given function
process_apps() {
  local func=$1
  shift
  local apps=("$@")
  
  for app in "${apps[@]}"; do
    $func "${HOME}" "$app"
  done
}

# Show usage information
show_usage() {
  echo "Usage: $0 [stow|unstow]"
  echo "  stow   - Create symlinks for all configurations (default)"
  echo "  unstow - Remove symlinks for all configurations"
  exit 1
}

# Main script logic
if [[ $# -gt 1 ]]; then
  show_usage
fi

action=${1:-stow}

case $action in
  stow)
    print_banner "Stowing apps for user: $(whoami)"
    print_banner "Stowing base apps"
    process_apps stowit "${base[@]}"
    
    if [[ "$(whoami)" != "root" ]]; then
      print_banner "Stowing user only apps"
      process_apps stowit "${useronly[@]}"
    fi
    
    print_banner "Stowing complete"
    ;;
    
  unstow)
    print_banner "Unstowing apps for user: $(whoami)"
    print_banner "Unstowing base apps"
    process_apps unstowit "${base[@]}"
    
    if [[ "$(whoami)" != "root" ]]; then
      print_banner "Unstowing user only apps"
      process_apps unstowit "${useronly[@]}"
    fi
    
    print_banner "Unstowing complete"
    ;;
    
  *)
    show_usage
    ;;
esac
